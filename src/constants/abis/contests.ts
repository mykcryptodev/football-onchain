import { Abi } from "viem";

export const abi: Abi = [
  {
    inputs: [
      { internalType: "address", name: "treasury_", type: "address" },
      { internalType: "contract Boxes", name: "boxes_", type: "address" },
      {
        internalType: "contract GameScoreOracle",
        name: "gameScoreOracle_",
        type: "address",
      },
      {
        internalType: "contract ContestsManager",
        name: "contestsManager_",
        type: "address",
      },
      {
        internalType: "contract RandomNumbers",
        name: "randomNumbers_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [{ internalType: "address", name: "target", type: "address" }],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  { inputs: [], name: "BoxAlreadyClaimed", type: "error" },
  { inputs: [], name: "BoxCostNotSet", type: "error" },
  { inputs: [], name: "BoxDoesNotExist", type: "error" },
  { inputs: [], name: "BoxNotInContest", type: "error" },
  { inputs: [], name: "BoxesCannotBeClaimed", type: "error" },
  { inputs: [], name: "CallerNotContestCreator", type: "error" },
  { inputs: [], name: "CallerNotContestsManager", type: "error" },
  { inputs: [], name: "CallerNotRandomNumbers", type: "error" },
  { inputs: [], name: "CooldownNotMet", type: "error" },
  { inputs: [], name: "FailedInnerCall", type: "error" },
  { inputs: [], name: "FailedToSendETH", type: "error" },
  { inputs: [], name: "GameIdNotSet", type: "error" },
  { inputs: [], name: "InsufficientPayment", type: "error" },
  { inputs: [], name: "InvalidPayoutStrategy", type: "error" },
  { inputs: [], name: "PayoutAlreadyMade", type: "error" },
  { inputs: [], name: "PayoutCalculationFailed", type: "error" },
  { inputs: [], name: "RandomValuesAlreadyFetched", type: "error" },
  { inputs: [], name: "RewardsNotClaimable", type: "error" },
  {
    inputs: [{ internalType: "address", name: "token", type: "address" }],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  { inputs: [], name: "ZeroAddress", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "BoxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ContestCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      { indexed: false, internalType: "bytes", name: "error", type: "bytes" },
    ],
    name: "GameScoreError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "GameScoresRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "GameScoresUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ScoresAssigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ScoresRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENT_DENOMINATOR",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREASURY_FEE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "boxes",
    outputs: [{ internalType: "contract Boxes", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256[]", name: "tokenIds", type: "uint256[]" },
      { internalType: "address", name: "player", type: "address" },
    ],
    name: "claimBoxes",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contestIdCounter",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creator", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "contestsByUser",
    outputs: [{ internalType: "uint256", name: "contestId", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contestsManager",
    outputs: [
      { internalType: "contract ContestsManager", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "gameId", type: "uint256" },
      { internalType: "uint256", name: "boxCost", type: "uint256" },
      { internalType: "address", name: "boxCurrency", type: "address" },
      { internalType: "string", name: "title", type: "string" },
      { internalType: "string", name: "description", type: "string" },
      { internalType: "address", name: "payoutStrategy", type: "address" },
    ],
    name: "createContest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "contestId", type: "uint256" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "fetchBoxScores",
    outputs: [
      { internalType: "uint256", name: "rowScore", type: "uint256" },
      { internalType: "uint256", name: "colScore", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "contestId", type: "uint256" }],
    name: "fetchContestCols",
    outputs: [{ internalType: "uint8[]", name: "", type: "uint8[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "contestId", type: "uint256" }],
    name: "fetchContestRows",
    outputs: [{ internalType: "uint8[]", name: "", type: "uint8[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string[]", name: "args", type: "string[]" },
      { internalType: "uint64", name: "subscriptionId", type: "uint64" },
      { internalType: "uint32", name: "gasLimit", type: "uint32" },
      { internalType: "bytes32", name: "jobId", type: "bytes32" },
      { internalType: "uint256", name: "gameId", type: "uint256" },
    ],
    name: "fetchFreshGameScores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_contestId", type: "uint256" }],
    name: "fetchRandomValues",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "contestId", type: "uint256" },
      { internalType: "uint8[]", name: "rows", type: "uint8[]" },
      { internalType: "uint8[]", name: "cols", type: "uint8[]" },
    ],
    name: "fulfillRandomNumbers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameScoreOracle",
    outputs: [
      { internalType: "contract GameScoreOracle", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "contestId", type: "uint256" },
      { internalType: "uint256", name: "rowScore", type: "uint256" },
      { internalType: "uint256", name: "colScore", type: "uint256" },
    ],
    name: "getBoxOwner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "contestId", type: "uint256" }],
    name: "getContestData",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "uint256", name: "gameId", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8[]", name: "rows", type: "uint8[]" },
          { internalType: "uint8[]", name: "cols", type: "uint8[]" },
          {
            components: [
              { internalType: "address", name: "currency", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct IContestTypes.Cost",
            name: "boxCost",
            type: "tuple",
          },
          { internalType: "bool", name: "boxesCanBeClaimed", type: "bool" },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalPayoutsMade",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalAmountPaid",
                type: "uint256",
              },
            ],
            internalType: "struct IContestTypes.PayoutTrackerView",
            name: "payoutsPaid",
            type: "tuple",
          },
          { internalType: "uint256", name: "totalRewards", type: "uint256" },
          { internalType: "uint256", name: "boxesClaimed", type: "uint256" },
          {
            internalType: "uint256[]",
            name: "randomValues",
            type: "uint256[]",
          },
          { internalType: "bool", name: "randomValuesSet", type: "bool" },
          { internalType: "string", name: "title", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "address", name: "payoutStrategy", type: "address" },
        ],
        internalType: "struct IContestTypes.ContestView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "gameId", type: "uint256" }],
    name: "getGameScores",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "uint8", name: "homeQ1LastDigit", type: "uint8" },
          { internalType: "uint8", name: "homeQ2LastDigit", type: "uint8" },
          { internalType: "uint8", name: "homeQ3LastDigit", type: "uint8" },
          { internalType: "uint8", name: "homeFLastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayQ1LastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayQ2LastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayQ3LastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayFLastDigit", type: "uint8" },
          { internalType: "uint8", name: "qComplete", type: "uint8" },
          { internalType: "bool", name: "requestInProgress", type: "bool" },
          { internalType: "bool", name: "gameCompleted", type: "bool" },
        ],
        internalType: "struct IContestTypes.GameScore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "contestId", type: "uint256" }],
    name: "getPayoutStats",
    outputs: [
      { internalType: "uint256", name: "totalPayoutsMade", type: "uint256" },
      { internalType: "uint256", name: "totalAmountPaid", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getTokenIdContestNumber",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "contestId", type: "uint256" },
      { internalType: "uint256", name: "rowScore", type: "uint256" },
      { internalType: "uint256", name: "colScore", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "uint8", name: "homeQ1LastDigit", type: "uint8" },
          { internalType: "uint8", name: "homeQ2LastDigit", type: "uint8" },
          { internalType: "uint8", name: "homeQ3LastDigit", type: "uint8" },
          { internalType: "uint8", name: "homeFLastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayQ1LastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayQ2LastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayQ3LastDigit", type: "uint8" },
          { internalType: "uint8", name: "awayFLastDigit", type: "uint8" },
          { internalType: "uint8", name: "qComplete", type: "uint8" },
          { internalType: "bool", name: "requestInProgress", type: "bool" },
          { internalType: "bool", name: "gameCompleted", type: "bool" },
        ],
        internalType: "struct IContestTypes.GameScore",
        name: "gameScores",
        type: "tuple",
      },
    ],
    name: "getWinningQuarters",
    outputs: [{ internalType: "uint8[]", name: "", type: "uint8[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "contestId", type: "uint256" },
      { internalType: "bytes32", name: "payoutId", type: "bytes32" },
    ],
    name: "isPayoutMade",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "contestId", type: "uint256" }],
    name: "isRandomValuesSet",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "contestId", type: "uint256" },
      { internalType: "uint8", name: "quarter", type: "uint8" },
    ],
    name: "isRewardPaidForQuarter",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "bytes", name: "", type: "bytes" },
    ],
    name: "onERC721Received",
    outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "contestId", type: "uint256" }],
    name: "processPayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomNumbers",
    outputs: [
      { internalType: "contract RandomNumbers", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "randomNumbers_", type: "address" },
    ],
    name: "setRandomNumbers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "treasury_", type: "address" }],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "to", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_contestId", type: "uint256" },
      { internalType: "string", name: "_newTitle", type: "string" },
      { internalType: "string", name: "_newDescription", type: "string" },
    ],
    name: "updateContestInfoInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
